buildscript {
    repositories {
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }

    dependencies {
        classpath 'com.bmuschko:gradle-tomcat-plugin:2.4.2'
        classpath "com.moowork.gradle:gradle-node-plugin:1.2.0"
    }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'war'
apply plugin: 'com.moowork.node'
apply plugin: 'com.bmuschko.tomcat'

group = 'edu.mssm.pharm.maayanlab.Harmonizome'
description = 'Harmonizome'

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
  def tomcatVersion = '8.0.42'
  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}",
        "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"

  compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version:"${tomcatVersion}"
  compile group: 'javax.servlet', name: 'jstl', version:'1.2'
  compile group: 'org.apache.commons', name: 'commons-lang3', version:'3.4'
  compile group: 'org.apache.httpcomponents', name: 'httpclient', version:'4.5.2'
  compile group: 'mysql', name: 'mysql-connector-java', version:'5.1.22'
  compile group: 'org.hibernate', name: 'hibernate-core', version:'4.1.8.Final'
  compile 'com.github.MaayanLab.common:common-database:master-SNAPSHOT'
  compile group: 'org.hibernate', name: 'hibernate-c3p0', version:'3.6.3.Final'
  compile group: 'javax.mail', name: 'mail', version:'1.4'
  testCompile group: 'junit', name: 'junit', version:'4.12'
  testCompile group: 'org.mockito', name: 'mockito-all', version:'1.10.8'
  providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version:'3.0.1'
  providedCompile group: 'javax.servlet.jsp', name: 'jsp-api', version:'2.2'
}

def webappDir = "${project.projectDir}/src/main/webapp/"

node {
  download = true
  nodeModulesDir = file(webappDir)
}

task prepareNpm(type: NpmTask) {
    inputs.file("${webappDir}/package.json")
    outputs.dir("${webappDir}/node_modules")
    args = [ "install" ]
}

task buildProject(type: NpmTask) {
    inputs.file("${webappDir}/.babelrc")
    inputs.file("${webappDir}/gruntfile.js")
    inputs.files fileTree(webappDir).include('**/*.js').include('**/*.css').exclude('dist/**').exclude('lib/**').exclude('node_modules/**')
    outputs.dir("${webappDir}/dist")
    dependsOn prepareNpm
    args = [ "run", "build" ]
}

build.dependsOn buildProject

def prefix = project.properties["HARMONIZOME_PREFIX"] ?: "Harmonizome"

tomcat {
    httpPort = (project.properties["TOMCAT_PORT"] ?: "8080").toInteger()
    contextPath = "${prefix}"
}

task createConstantProperties(type: WriteProperties) {
    File constPropFile = file('src/main/resources/constant.properties')
    project.logger.info('Creating constant.properties')
    property('HARMONIZOME_PREFIX', prefix)
    setOutputFile(constPropFile)
    writeProperties()
}

task createHibernateProperties(type: WriteProperties) {
    String mysqlHost = project.properties["MYSQL_HOST"] ?: "localhost"
    String mysqlDatabase = project.properties["MYSQL_DATABASE"] ?: "harmonizome"
    String mysqlUser = project.properties["MYSQL_USER"] ?: "harmonizome"
    String mysqlPass = project.properties["MYSQL_PASSWORD"] ?: "emozinomrah"
    String hibernateUri = "jdbc:mysql://" + mysqlHost + "/" + mysqlDatabase
    File hibernatePropFile = file('src/main/resources/hibernate.properties')
    project.logger.info('Creating hibernate.properties')
    property('hibernate.connection.username', mysqlUser)
    property('hibernate.connection.password', mysqlPass)
    property('hibernate.connection.url', hibernateUri)
    setOutputFile(hibernatePropFile)
    writeProperties()
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

artifacts {
  archives sourcesJar
}
